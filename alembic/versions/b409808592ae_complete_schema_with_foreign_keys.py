"""Complete schema with foreign keys

Revision ID: b409808592ae
Revises:
Create Date: 2025-06-20 13:11:03.923529

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "b409808592ae"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "pipeline_runs",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("run_timestamp", sa.DateTime(), nullable=True),
        sa.Column(
            "status", sa.Enum("SUCCESS", "FAIL", name="runstatus"), nullable=False
        ),
        sa.Column("log", sa.Text(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_pipeline_runs_run_timestamp"),
        "pipeline_runs",
        ["run_timestamp"],
        unique=False,
    )
    op.create_table(
        "tickers",
        sa.Column("symbol", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("sector", sa.String(), nullable=True),
        sa.PrimaryKeyConstraint("symbol"),
    )
    op.create_index(op.f("ix_tickers_symbol"), "tickers", ["symbol"], unique=False)
    op.create_table(
        "price_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("ticker_symbol", sa.String(), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("open", sa.Float(), nullable=True),
        sa.Column("high", sa.Float(), nullable=True),
        sa.Column("low", sa.Float(), nullable=True),
        sa.Column("close", sa.Float(), nullable=True),
        sa.Column("volume", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["ticker_symbol"],
            ["tickers.symbol"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_price_data_date"), "price_data", ["date"], unique=False)
    op.create_index(
        op.f("ix_price_data_ticker_symbol"),
        "price_data",
        ["ticker_symbol"],
        unique=False,
    )
    op.create_table(
        "return_data",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("ticker_symbol", sa.String(), nullable=True),
        sa.Column("date", sa.Date(), nullable=True),
        sa.Column("price_data_id", sa.Integer(), nullable=True),
        sa.Column("daily_return", sa.Float(), nullable=True),
        sa.ForeignKeyConstraint(
            ["price_data_id"],
            ["price_data.id"],
        ),
        sa.ForeignKeyConstraint(
            ["ticker_symbol"],
            ["tickers.symbol"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_return_data_date"), "return_data", ["date"], unique=False)
    op.create_index(
        op.f("ix_return_data_price_data_id"),
        "return_data",
        ["price_data_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_return_data_ticker_symbol"),
        "return_data",
        ["ticker_symbol"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_return_data_ticker_symbol"), table_name="return_data")
    op.drop_index(op.f("ix_return_data_price_data_id"), table_name="return_data")
    op.drop_index(op.f("ix_return_data_date"), table_name="return_data")
    op.drop_table("return_data")
    op.drop_index(op.f("ix_price_data_ticker_symbol"), table_name="price_data")
    op.drop_index(op.f("ix_price_data_date"), table_name="price_data")
    op.drop_table("price_data")
    op.drop_index(op.f("ix_tickers_symbol"), table_name="tickers")
    op.drop_table("tickers")
    op.drop_index(op.f("ix_pipeline_runs_run_timestamp"), table_name="pipeline_runs")
    op.drop_table("pipeline_runs")
    # ### end Alembic commands ###
